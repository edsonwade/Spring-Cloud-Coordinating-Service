version: '3'

services:
  authentication-service:
    # Configuration for the Authentication Service
    image: your-auth-service-image:latest
    ports:
      - "8081:8081"
    networks:
      - microservices-network

  api-gateway:
    # Configuration for the API Gateway
    image: your-api-gateway-image:latest
    ports:
      - "8080:8080"
    networks:
      - microservices-network

  eureka-server:
    # Configuration for the Eureka Server
    image: your-eureka-server-image:latest
    ports:
      - "8761:8761"
    networks:
      - microservices-network

  student-service:
    # Configuration for the Student Service
    image: your-student-service-image:latest
    ports:
      - "8082:8082"
    networks:
      - microservices-network

  teacher-service:
    # Configuration for the Teacher Service
    image: your-teacher-service-image:latest
    ports:
      - "8083:8083"
    networks:
      - microservices-network

  notification-service:
    # Configuration for the Notification Service
    image: your-notification-service-image:latest
    ports:
      - "8084:8084"
    networks:
      - microservices-network

  kafka-broker:
    # Configuration for the Kafka Broker
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    networks:
      - microservices-network

  email-service:
    # Configuration for the Email Service
    image: your-email-service-image:latest
    ports:
      - "8085:8085"
    networks:
      - microservices-network

  database-services:
    # Configuration for the Database Services (PostgreSQL, MongoDB)
    image: your-database-services-image:latest
    ports:
      - "5432:5432"  # PostgreSQL
      - "27017:27017" # MongoDB
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge




version: '3'

services:
  authentication-service:
    # Configuration for the Authentication Service
    image: your-auth-service-image:latest
    ports:
      - "8081:8081"
    networks:
      - microservices-network

  api-gateway:
    # Configuration for the API Gateway
    image: your-api-gateway-image:latest
    ports:
      - "8080:8080"
    networks:
      - microservices-network

  eureka-server:
    # Configuration for the Eureka Server
    image: your-eureka-server-image:latest
    ports:
      - "8761:8761"
    networks:
      - microservices-network

  student-service:
    # Configuration for the Student Service
    image: your-student-service-image:latest
    ports:
      - "8082:8082"
    networks:
      - microservices-network

  teacher-service:
    # Configuration for the Teacher Service
    image: your-teacher-service-image:latest
    ports:
      - "8083:8083"
    networks:
      - microservices-network

  notification-service:
    # Configuration for the Notification Service
    image: your-notification-service-image:latest
    ports:
      - "8084:8084"
    networks:
      - microservices-network

  kafka-broker:
    # Configuration for the Kafka Broker
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    networks:
      - microservices-network

  email-service:
    # Configuration for the Email Service
    image: your-email-service-image:latest
    ports:
      - "8085:8085"
    networks:
      - microservices-network

  database-services:
    # Configuration for the Database Services (PostgreSQL, MongoDB)
    image: your-database-services-image:latest
    ports:
      - "5432:5432"  # PostgreSQL
      - "27017:27017" # MongoDB
    networks:
      - microservices-network

  prometheus:
    # Configuration for Prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
    ports:
      - "9090:9090"
    networks:
      - microservices-network

  grafana:
    # Configuration for Grafana
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=your_grafana_password
    ports:
      - "3000:3000"
    networks:
      - microservices-network

  health-check:
    # Configuration for Health Check
    image: your-health-check-image:latest
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge



version: '3'

services:

  authentication-service:
    image: your-auth-service-image:latest
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://authentication-service:8080/actuator/health"]
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - microservices-network

  api-gateway:
    image: your-api-gateway-image:latest
    ports:
      - "8082:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://api-gateway:8080/actuator/health"]
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - microservices-network

  student-service:
    image: your-student-service-image:latest
    ports:
      - "8083:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://student-service:8080/actuator/health"]
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - microservices-network

  teacher-service:
    image: your-teacher-service-image:latest
    ports:
      - "8084:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://teacher-service:8080/actuator/health"]
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - microservices-network

  notification-service:
    image: your-notification-service-image:latest
    ports:
      - "8085:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://notification-service:8080/actuator/health"]
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - microservices-network

  email-service:
    image: your-email-service-image:latest
    ports:
      - "8086:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://email-service:8080/actuator/health"]
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge



version: '3'

services:

  eureka-server:
    image: your-eureka-server-image:latest
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://eureka-server:8761/actuator/health"]
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - microservices-network

  authentication-service:
    image: your-auth-service-image:latest
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://authentication-service:8080/actuator/health"]
      interval: 10s
      retries: 5
      timeout: 5s
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - microservices-network

  api-gateway:
    image: your-api-gateway-image:latest
    ports:
      - "8082:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://api-gateway:8080/actuator/health"]
      interval: 10s
      retries: 5
      timeout: 5s
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - microservices-network

  student-service:
    image: your-student-service-image:latest
    ports:
      - "8083:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://student-service:8080/actuator/health"]
      interval: 10s
      retries: 5
      timeout: 5s
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - microservices-network

  teacher-service:
    image: your-teacher-service-image:latest
    ports:
      - "8084:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://teacher-service:8080/actuator/health"]
      interval: 10s
      retries: 5
      timeout: 5s
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - microservices-network

  notification-service:
    image: your-notification-service-image:latest
    ports:
      - "8085:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://notification-service:8080/actuator/health"]
      interval: 10s
      retries: 5
      timeout: 5s
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - microservices-network

  email-service:
    image: your-email-service-image:latest
    ports:
      - "8086:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://email-service:8080/actuator/health"]
      interval: 10s
      retries: 5
      timeout: 5s
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge


version: '3'

services:

  eureka-server:
    # ... (your existing Eureka Server configuration)

  authentication-service:
    # ... (your existing Authentication Service configuration)

  api-gateway:
    # ... (your existing API Gateway configuration)

  student-service:
    # ... (your existing Student Service configuration)

  teacher-service:
    # ... (your existing Teacher Service configuration)

  notification-service:
    # ... (your existing Notification Service configuration)

  email-service:
    # ... (your existing Email Service configuration)

  kafka:
    image: wurstmeister/kafka:2.12-2.6.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"


version: '3'

services:

  eureka-server:
    # ... (your existing Eureka Server configuration)

  authentication-service:
    # ... (your existing Authentication Service configuration)
    depends_on:
      - eureka-server

  api-gateway:
    # ... (your existing API Gateway configuration)
    depends_on:
      - eureka-server

  student-service:
    # ... (your existing Student Service configuration)
    depends_on:
      - eureka-server
      - kafka

  teacher-service:
    # ... (your existing Teacher Service configuration)
    depends_on:
      - eureka-server
      - kafka

  notification-service:
    # ... (your existing Notification Service configuration)
    depends_on:
      - eureka-server
      - kafka

  email-service:
    # ... (your existing Email Service configuration)
    depends_on:
      - eureka-server

  kafka:
    image: wurstmeister/kafka:2.12-2.6.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
